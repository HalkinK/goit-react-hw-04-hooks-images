{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/ApiService.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","event","preventDefault","trim","toast","warn","type","autoComplete","autoFocus","placeholder","value","name","onChange","currentTarget","toLowerCase","ImageGalleryItem","src","imageForModal","tags","alt","ImageGallery","gallery","onImageClick","onClick","map","id","webformatURL","largeImageURL","Button","text","ApiServise","fetchImages","page","fetch","then","responce","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","onEscClick","removeEventListener","e","code","createPortal","target","Status","App","setPage","setGallery","status","setStatus","showModal","setShowModal","currentImage","setCurrentImage","prevState","hits","catch","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","color","height","width","timeout","nodeName","dataset","img","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf543e45.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleQueryChange = (event) => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (searchQuery.trim() === \"\") {\n      return toast.warn(\"Введите свой запрос\");\n    }\n    onSubmit(searchQuery);\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          name={\"searchQuery\"}\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ src, imageForModal, tags }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={src}\n      alt={tags}\n      data-img={imageForModal}\n      className=\"ImageGalleryItem-image\"\n    />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ gallery, onImageClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImageClick}>\n    {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\n      <ImageGalleryItem\n        key={id}\n        src={webformatURL}\n        imageForModal={largeImageURL}\n        tags={tags}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  gallery: PropTypes.arrayOf(PropTypes.object),\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, onClick }) => (\n  <button className=\"Button\" type=\"button\" onClick={onClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","// import axios from \"axios\";\n\nconst API_KEY = \"21946293-ddb661a7c3de00e68a212d36c\";\nconst url = \"https://pixabay.com/api/?image_type=photo&orientation=horizontal\";\n\nfunction fetchImages(searchQuery, page) {\n  return fetch(\n    `${url}&q=${searchQuery}&page=${page}&per_page=12&key=${API_KEY}`\n  ).then((responce) => {\n    if (responce.ok) {\n      return responce.json();\n    }\n    return Promise.reject(new Error(\"No response from server\"));\n  });\n}\n\nconst ApiServise = { fetchImages };\n\nexport default ApiServise;\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default function Modal({ imageForModal, tags, onClose }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onEscClick);\n    return () => {\n      window.removeEventListener(\"keydown\", onEscClick);\n    };\n  });\n\n  const onEscClick = (e) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={imageForModal} alt={tags} />\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  imageForModal: PropTypes.string.isRequired,\n  // tags: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from \"react\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\nimport Serchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport ApiServise from \"./services/ApiService\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [gallery, setGallery] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [showModal, setShowModal] = useState(false);\n  const [currentImage, setCurrentImage] = useState(\"\");\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const renderGallery = () => {\n      setStatus(Status.PENDING);\n\n      ApiServise.fetchImages(searchQuery, page)\n        .then((responce) => {\n          setGallery((prevState) => [...prevState, ...responce.hits]);\n        })\n        .catch((error) => {\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => {\n          setStatus(Status.RESOLVED);\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        });\n    };\n\n    renderGallery();\n  }, [searchQuery, page]);\n\n  const handleFormSubmit = (searchQuery) => {\n    setSearchQuery(searchQuery);\n    setPage(1);\n    setGallery([]);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onLoadMore = () => {\n    setPage((prevState) => prevState + 1);\n  };\n\n  const onImageClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    setCurrentImage(e.target.dataset.img);\n\n    toggleModal();\n  };\n\n  return (\n    <div className=\"App\">\n      <Serchbar onSubmit={handleFormSubmit} value={searchQuery} />\n      {status === Status.PENDING && (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={200}\n          width={200}\n          timeout={3000} //3 secs\n        />\n      )}\n      {status === Status.REJECTED && <h1>{\"Something went wrong\"}</h1>}\n      {status === Status.RESOLVED && (\n        <>\n          <ImageGallery gallery={gallery} onImageClick={onImageClick} />\n\n          <Button onClick={onLoadMore} text={\"Load more\"} />\n        </>\n      )}\n      {showModal && (\n        <Modal onClose={toggleModal} imageForModal={currentImage} />\n      )}\n\n      <ToastContainer position=\"top-center\" autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}